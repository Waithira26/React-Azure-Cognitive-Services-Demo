[{"/home/grey/Desktop/Projects/REACT/skeshy-demo/src/index.js":"1","/home/grey/Desktop/Projects/REACT/skeshy-demo/src/App.js":"2","/home/grey/Desktop/Projects/REACT/skeshy-demo/src/reportWebVitals.js":"3"},{"size":500,"mtime":1606657721019,"results":"4","hashOfConfig":"5"},{"size":3714,"mtime":1607021095393,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1606657721019,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12njbpg",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/grey/Desktop/Projects/REACT/skeshy-demo/src/index.js",[],"/home/grey/Desktop/Projects/REACT/skeshy-demo/src/App.js",["15"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { debounce } from \"lodash\";\n\nconst headers = {\n  \"Ocp-Apim-Subscription-Key\": `${process.env.REACT_APP_KEY}`,\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\",\n};\n\nconst requestLang = async (text) => {\n  const { data } = await axios({\n    method: \"post\",\n    url: `https://codeless.cognitiveservices.azure.com/text/analytics/v3.0/languages`,\n    data: {\n      documents: [\n        {\n          language: \"en\",\n          id: \"1\",\n          text: text,\n        },\n      ],\n    },\n    headers,\n  });\n\n  return data;\n};\n\nconst requestSentiment = async (text) => {\n  const { data } = await axios({\n    method: \"post\",\n    url: `https://codeless.cognitiveservices.azure.com/text/analytics/v3.0/sentiment`,\n    data: {\n      documents: [\n        {\n          language: \"en\",\n          id: \"1\",\n          text: text,\n        },\n      ],\n    },\n    headers,\n  });\n\n  return data;\n};\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [mode, setMode] = useState(\"languages\");\n  const [langDoc, setLangDoc] = useState({});\n  const [sentimentDoc, setSentimentDoc] = useState({});\n\n  const onChangeHandler = (event) => {\n    setText(event.target.value);\n  };\n  const onOptionSelect = (event) => {\n    setMode(event.target.value);\n  };\n  const options = [\n    {\n      label: \"Language Detection\",\n      value: \"languages\",\n    },\n    {\n      label: \"Sentiment Analysis\",\n      value: \"sentiment\",\n    },\n  ];\n\n  useEffect(() => {\n    console.log(process.env.REACT_APP_KEY);\n    const debouncedSave = debounce(() => makeRequest(), 1500);\n    debouncedSave();\n\n    const makeRequest = () => {\n      if (mode === \"languages\") {\n        setSentimentDoc({});\n        requestLang(text)\n          .then((res) => setLangDoc(res.documents[0]))\n          .catch(console.log);\n\n        console.log(langDoc);\n      }\n\n      if (mode === \"sentiment\") {\n        setLangDoc({});\n        requestSentiment(text)\n          .then((res) => setSentimentDoc(res.documents[0]))\n          .catch(console.log);\n        console.log(sentimentDoc);\n      }\n    };\n  }, [text, mode]);\n\n  return (\n    <div className=\"App\">\n      <h1 id=\"heading\">CodeLess Intelligence Demo</h1>\n      <br />\n      <h2>User Input</h2>\n      <input\n        className=\"input\"\n        type=\"text\"\n        onChange={onChangeHandler}\n        value={text}\n        max=\"4\"\n      />\n      <br />\n      <br />\n      <select\n        value={mode}\n        onChange={onOptionSelect}\n        className=\"single-select\"\n        classNamePrefix=\"react-select\"\n        placeholder=\"Choose an Analysis Mode\"\n        options={options}\n      >\n        {options.map((option) => (\n          <option value={option.value}>{option.label}</option>\n        ))}\n      </select>\n\n      <h2>Processed Output</h2>\n      {mode === \"languages\" ? (\n        <>\n          {langDoc && langDoc !== undefined ? (\n            <>\n              <p>Language: {langDoc?.detectedLanguage?.name}</p>\n              <p>Confidence Score: {langDoc?.detectedLanguage?.confidenceScore}</p>\n            </>\n          ) : null}\n        </>   \n      ) : (\n        <>\n          <label>Sentiment Confidence Scores</label>\n          {sentimentDoc && sentimentDoc !== undefined ? (\n            <>\n              <p>Sentiment: {sentimentDoc.sentiment}</p>\n              <p>Positive Score: {sentimentDoc?.confidenceScores?.positive}</p>\n              <p>Neutral Score: {sentimentDoc?.confidenceScores?.neutral}</p>\n              <p>Negative Score: {sentimentDoc?.confidenceScores?.negative}</p>\n            </>\n          ) : null\n          }\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/home/grey/Desktop/Projects/REACT/skeshy-demo/src/reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":95,"column":6,"nodeType":"18","endLine":95,"endColumn":18,"suggestions":"19"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'langDoc' and 'sentimentDoc'. Either include them or remove the dependency array.","ArrayExpression",["20"],{"desc":"21","fix":"22"},"Update the dependencies array to be: [text, mode, langDoc, sentimentDoc]",{"range":"23","text":"24"},[2163,2175],"[text, mode, langDoc, sentimentDoc]"]